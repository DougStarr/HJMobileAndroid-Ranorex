///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HJMobileAndroid.Recordings.Job_Review
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SolveSchedules recording.
    /// </summary>
    [TestModule("f7b8329c-ca2a-49d6-b0d6-8e8c66eed485", ModuleType.Recording, 1)]
    public partial class SolveSchedules : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HJMobileAndroid.HJMobileAndroidRepository repository.
        /// </summary>
        public static HJMobileAndroid.HJMobileAndroidRepository repo = HJMobileAndroid.HJMobileAndroidRepository.Instance;

        static SolveSchedules instance = new SolveSchedules();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SolveSchedules()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SolveSchedules Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.4")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.4")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.AlertOrangePlusScheduledTimeDoesntMa1' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.AlertOrangePlusScheduledTimeDoesntMa1Info, new RecordItemIndex(0));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.AlertOrangePlusScheduledTimeDoesntMa1.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Start' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StartInfo, new RecordItemIndex(1));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Start.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.SelectTime' at Center", repo.ComHcssHcssmobileTesting.UIWindow.SelectTimeInfo, new RecordItemIndex(2));
            repo.ComHcssHcssmobileTesting.UIWindow.SelectTime.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControlInfo, new RecordItemIndex(3));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ButtonEnd' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ButtonEndInfo, new RecordItemIndex(4));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ButtonEnd.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.SelectTime' at Center", repo.ComHcssHcssmobileTesting.UIWindow.SelectTimeInfo, new RecordItemIndex(5));
            repo.ComHcssHcssmobileTesting.UIWindow.SelectTime.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.UnselectedCheckbox' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.UnselectedCheckboxInfo, new RecordItemIndex(6));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.UnselectedCheckbox.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.None' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.NoneInfo, new RecordItemIndex(7));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.None.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.CellYes' at Center", repo.ComHcssHcssmobileTesting.UIWindow.CellYesInfo, new RecordItemIndex(8));
            repo.ComHcssHcssmobileTesting.UIWindow.CellYes.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.None1' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.None1Info, new RecordItemIndex(9));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.None1.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.CellYes' at Center", repo.ComHcssHcssmobileTesting.UIWindow.CellYesInfo, new RecordItemIndex(10));
            repo.ComHcssHcssmobileTesting.UIWindow.CellYes.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ApplyToCrew' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ApplyToCrewInfo, new RecordItemIndex(11));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ApplyToCrew.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.ContainerYes23' at Center", repo.ComHcssHcssmobileTesting.ContainerYes23Info, new RecordItemIndex(12));
            repo.ComHcssHcssmobileTesting.ContainerYes23.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Done' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.DoneInfo, new RecordItemIndex(13));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Done.Touch();
            Delay.Milliseconds(500);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
