///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HJMobileAndroid.Recordings.Job_Review
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SendAndValidateRequired recording.
    /// </summary>
    [TestModule("59fc09cb-b365-444c-920c-154396be0c63", ModuleType.Recording, 1)]
    public partial class SendAndValidateRequired : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HJMobileAndroid.HJMobileAndroidRepository repository.
        /// </summary>
        public static HJMobileAndroid.HJMobileAndroidRepository repo = HJMobileAndroid.HJMobileAndroidRepository.Instance;

        static SendAndValidateRequired instance = new SendAndValidateRequired();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SendAndValidateRequired()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SendAndValidateRequired Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.4")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.4")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.Send123' at Center", repo.ComHcssHcssmobileTesting.Send123Info, new RecordItemIndex(0));
            repo.ComHcssHcssmobileTesting.Send123.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMissingProduction'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMissingProductionInfo, new RecordItemIndex(1));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMissingProductionInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMoreThan100Perce'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMoreThan100PerceInfo, new RecordItemIndex(2));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMoreThan100PerceInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeHasNoNotes'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeHasNoNotesInfo, new RecordItemIndex(3));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeHasNoNotesInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeesRegularHoursExce'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeesRegularHoursExceInfo, new RecordItemIndex(4));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeesRegularHoursExceInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeListedMoreThanOn'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeListedMoreThanOnInfo, new RecordItemIndex(5));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeListedMoreThanOnInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeHoursNotSigned'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeHoursNotSignedInfo, new RecordItemIndex(6));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeHoursNotSignedInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusScheduledTimeDoesntMatch'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusScheduledTimeDoesntMatchInfo, new RecordItemIndex(7));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusScheduledTimeDoesntMatchInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusLunchNotRecordedRegular'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusLunchNotRecordedRegularInfo, new RecordItemIndex(8));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusLunchNotRecordedRegularInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Touch Gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '100.0' with swipe duration'500ms' and step count '0' on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMissingProduction'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMissingProductionInfo, new RecordItemIndex(9));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusCostCodeMissingProduction.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "100.0"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "500ms"), 0);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusBreaksNotRecorded'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusBreaksNotRecordedInfo, new RecordItemIndex(10));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusBreaksNotRecordedInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeEquipmentHasLess'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeEquipmentHasLessInfo, new RecordItemIndex(11));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusEmployeeEquipmentHasLessInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusUnlinkedPieceOfEquipment'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusUnlinkedPieceOfEquipmentInfo, new RecordItemIndex(12));
            Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.StopRedPlusUnlinkedPieceOfEquipmentInfo);
            Delay.Milliseconds(100);
            
            // These are the icons that pop up on the time card.  I am having a lot of problems getting them to work
            //Report.Log(ReportLevel.Info, "Validation", "These are the icons that pop up on the time card.  I am having a lot of problems getting them to work\r\nValidating Exists on item 'ComHcssHcssmobileTesting.UIWindow.StopUnlinkedEqp'.", repo.ComHcssHcssmobileTesting.UIWindow.StopUnlinkedEqpInfo, new RecordItemIndex(13));
            //Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.StopUnlinkedEqpInfo);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.StopFirstCostCode'.", repo.ComHcssHcssmobileTesting.UIWindow.StopFirstCostCodeInfo, new RecordItemIndex(14));
            //Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.StopFirstCostCodeInfo);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ComHcssHcssmobileTesting.UIWindow.StopSecondCostCode'.", repo.ComHcssHcssmobileTesting.UIWindow.StopSecondCostCodeInfo, new RecordItemIndex(15));
            //Validate.Exists(repo.ComHcssHcssmobileTesting.UIWindow.StopSecondCostCodeInfo);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='stop_red.png') on item 'ComHcssHcssmobileTesting.UIWindow.AlertFirstSchedule'.", repo.ComHcssHcssmobileTesting.UIWindow.AlertFirstScheduleInfo, new RecordItemIndex(16));
            //Validate.Attribute(repo.ComHcssHcssmobileTesting.UIWindow.AlertFirstScheduleInfo, "AccessibilityLabel", "stop_red.png");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='stop_red.png') on item 'ComHcssHcssmobileTesting.UIWindow.AlertSecondSchedule'.", repo.ComHcssHcssmobileTesting.UIWindow.AlertSecondScheduleInfo, new RecordItemIndex(17));
            //Validate.Attribute(repo.ComHcssHcssmobileTesting.UIWindow.AlertSecondScheduleInfo, "AccessibilityLabel", "stop_red.png");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='stop_red.png') on item 'ComHcssHcssmobileTesting.UIWindow.AlertThirdSchedule'.", repo.ComHcssHcssmobileTesting.UIWindow.AlertThirdScheduleInfo, new RecordItemIndex(18));
            //Validate.Attribute(repo.ComHcssHcssmobileTesting.UIWindow.AlertThirdScheduleInfo, "AccessibilityLabel", "stop_red.png");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='stop_red.png') on item 'ComHcssHcssmobileTesting.UIWindow.AlertFirstTotal'.", repo.ComHcssHcssmobileTesting.UIWindow.AlertFirstTotalInfo, new RecordItemIndex(19));
            //Validate.Attribute(repo.ComHcssHcssmobileTesting.UIWindow.AlertFirstTotalInfo, "AccessibilityLabel", "stop_red.png");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='stop_red.png') on item 'ComHcssHcssmobileTesting.UIWindow.AlertSecondTotal'.", repo.ComHcssHcssmobileTesting.UIWindow.AlertSecondTotalInfo, new RecordItemIndex(20));
            //Validate.Attribute(repo.ComHcssHcssmobileTesting.UIWindow.AlertSecondTotalInfo, "AccessibilityLabel", "stop_red.png");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='stop_red.png') on item 'ComHcssHcssmobileTesting.UIWindow.AlertThirdTotal'.", repo.ComHcssHcssmobileTesting.UIWindow.AlertThirdTotalInfo, new RecordItemIndex(21));
            //Validate.Attribute(repo.ComHcssHcssmobileTesting.UIWindow.AlertThirdTotalInfo, "AccessibilityLabel", "stop_red.png");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='stop_red.png') on item 'ComHcssHcssmobileTesting.UIWindow.AlertFourthTotal'.", repo.ComHcssHcssmobileTesting.UIWindow.AlertFourthTotalInfo, new RecordItemIndex(22));
            //Validate.Attribute(repo.ComHcssHcssmobileTesting.UIWindow.AlertFourthTotalInfo, "AccessibilityLabel", "stop_red.png");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.IgnoreIssues' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.IgnoreIssuesInfo, new RecordItemIndex(23));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.IgnoreIssues.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='False') on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Send'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SendInfo, new RecordItemIndex(24));
            Validate.Attribute(repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SendInfo, "Enabled", "False");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
