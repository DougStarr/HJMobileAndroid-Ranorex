///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HJMobileAndroid.Recordings.Job_Review
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SolveSignatures recording.
    /// </summary>
    [TestModule("afa094ce-4f0f-4267-9a9e-e52de6e933fa", ModuleType.Recording, 1)]
    public partial class SolveSignatures : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HJMobileAndroid.HJMobileAndroidRepository repository.
        /// </summary>
        public static HJMobileAndroid.HJMobileAndroidRepository repo = HJMobileAndroid.HJMobileAndroidRepository.Instance;

        static SolveSignatures instance = new SolveSignatures();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SolveSignatures()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SolveSignatures Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.4")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.4")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.AlertOrangePlusEmployeeHoursNotSigne1' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.AlertOrangePlusEmployeeHoursNotSigne1Info, new RecordItemIndex(0));
            repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.AlertOrangePlusEmployeeHoursNotSigne1.Touch();
            Delay.Milliseconds(500);
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.RENALDOAPlusAlfonzRenaldo' at Center", repo.ComHcssHcssmobileTesting.UIWindow.RENALDOAPlusAlfonzRenaldoInfo, new RecordItemIndex(1));
                repo.ComHcssHcssmobileTesting.UIWindow.RENALDOAPlusAlfonzRenaldo.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.RENALDOAPlusAlfonzRenaldo1' at Center", repo.ComHcssHcssmobileTesting.UIWindow.RENALDOAPlusAlfonzRenaldo1Info, new RecordItemIndex(2));
                repo.ComHcssHcssmobileTesting.UIWindow.RENALDOAPlusAlfonzRenaldo1.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            //Report.Log(ReportLevel.Info, "Set Value", "Setting attribute SelectedSegmentIndex to '0' on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControlInfo, new RecordItemIndex(3));
            //repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl.Element.SetAttributeValue("SelectedSegmentIndex", "0");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to 'Answer' on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Answer'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.AnswerInfo, new RecordItemIndex(4));
            //repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Answer.Element.SetAttributeValue("Text", "Answer");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Set Value", "Setting attribute SelectedSegmentIndex to '0' on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl1'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl1Info, new RecordItemIndex(5));
            //repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl1.Element.SetAttributeValue("SelectedSegmentIndex", "0");
            //Delay.Milliseconds(100);
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.TAPToSign' at Center", repo.ComHcssHcssmobileTesting.UIWindow.TAPToSignInfo, new RecordItemIndex(6));
                repo.ComHcssHcssmobileTesting.UIWindow.TAPToSign.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.TAPToSign1' at Center", repo.ComHcssHcssmobileTesting.UIWindow.TAPToSign1Info, new RecordItemIndex(7));
                repo.ComHcssHcssmobileTesting.UIWindow.TAPToSign1.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            Report.Log(ReportLevel.Info, "Touch", "LongTouch item 'ComHcssHcssmobileTesting.UIWindow.AutographXPng' at Center", repo.ComHcssHcssmobileTesting.UIWindow.AutographXPngInfo, new RecordItemIndex(8));
            repo.ComHcssHcssmobileTesting.UIWindow.AutographXPng.LongTouch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Accept' at Center", repo.ComHcssHcssmobileTesting.UIWindow.AcceptInfo, new RecordItemIndex(9));
            repo.ComHcssHcssmobileTesting.UIWindow.Accept.Touch();
            Delay.Milliseconds(500);
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.Done2' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Done2Info, new RecordItemIndex(10));
                repo.ComHcssHcssmobileTesting.UIWindow.Done2.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.Done5' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Done5Info, new RecordItemIndex(11));
                repo.ComHcssHcssmobileTesting.UIWindow.Done5.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ContainerYes' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ContainerYesInfo, new RecordItemIndex(12));
                repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ContainerYes.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.ARNICERPlusRogerArnice' at Center", repo.ComHcssHcssmobileTesting.UIWindow.ARNICERPlusRogerArniceInfo, new RecordItemIndex(13));
                repo.ComHcssHcssmobileTesting.UIWindow.ARNICERPlusRogerArnice.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.ARNICERPlusRogerArnice1' at Center", repo.ComHcssHcssmobileTesting.UIWindow.ARNICERPlusRogerArnice1Info, new RecordItemIndex(14));
                repo.ComHcssHcssmobileTesting.UIWindow.ARNICERPlusRogerArnice1.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            //Report.Log(ReportLevel.Info, "Set Value", "Setting attribute SelectedSegmentIndex to '0' on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl2'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl2Info, new RecordItemIndex(15));
            //repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl2.Element.SetAttributeValue("SelectedSegmentIndex", "0");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to 'Answer' on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Answer1'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Answer1Info, new RecordItemIndex(16));
            //repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.Answer1.Element.SetAttributeValue("Text", "Answer");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Set Value", "Setting attribute SelectedSegmentIndex to '0' on item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl3'.", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl3Info, new RecordItemIndex(17));
            //repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.SegmentedControl3.Element.SetAttributeValue("SelectedSegmentIndex", "0");
            //Delay.Milliseconds(100);
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.TAPToSign' at Center", repo.ComHcssHcssmobileTesting.UIWindow.TAPToSignInfo, new RecordItemIndex(18));
                repo.ComHcssHcssmobileTesting.UIWindow.TAPToSign.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(18)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.TAPToSign1' at Center", repo.ComHcssHcssmobileTesting.UIWindow.TAPToSign1Info, new RecordItemIndex(19));
                repo.ComHcssHcssmobileTesting.UIWindow.TAPToSign1.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(19)); }
            
            Report.Log(ReportLevel.Info, "Touch", "LongTouch item 'ComHcssHcssmobileTesting.UIWindow.AutographXPng' at Center", repo.ComHcssHcssmobileTesting.UIWindow.AutographXPngInfo, new RecordItemIndex(20));
            repo.ComHcssHcssmobileTesting.UIWindow.AutographXPng.LongTouch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHcssHcssmobileTesting.UIWindow.Accept' at Center", repo.ComHcssHcssmobileTesting.UIWindow.AcceptInfo, new RecordItemIndex(21));
            repo.ComHcssHcssmobileTesting.UIWindow.Accept.Touch();
            Delay.Milliseconds(500);
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.Done3' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Done3Info, new RecordItemIndex(22));
                repo.ComHcssHcssmobileTesting.UIWindow.Done3.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(22)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.Done6' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Done6Info, new RecordItemIndex(23));
                repo.ComHcssHcssmobileTesting.UIWindow.Done6.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(23)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ContainerYes' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ContainerYesInfo, new RecordItemIndex(24));
                repo.ComHcssHcssmobileTesting.UIWindow.Attendance_NonUseCodes.ContainerYes.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(24)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.Done4' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Done4Info, new RecordItemIndex(25));
                repo.ComHcssHcssmobileTesting.UIWindow.Done4.Touch();
                Delay.Milliseconds(1000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(25)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComHcssHcssmobileTesting.UIWindow.Done7' at Center", repo.ComHcssHcssmobileTesting.UIWindow.Done7Info, new RecordItemIndex(26));
                repo.ComHcssHcssmobileTesting.UIWindow.Done7.Touch();
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(26)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
